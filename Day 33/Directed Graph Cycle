class Solution {
    // Function to detect cycle in a directed graph.
    public boolean isCyclic(int V, ArrayList<ArrayList<Integer>> adj) {

        List<Integer> ans = new ArrayList<>();
        Queue<Integer> q = new LinkedList<>();
        int[] indegree = new int[V];
        
        for(int i=0; i<V; i++){
            for(int j : adj.get(i)){
                indegree[j]++;
            }
        }
        
        for(int i = 0; i<V; i++){
            if(indegree[i]==0){
                q.add(i);
            }
        }
        
        
        while(!q.isEmpty()){
            int rem = q.remove();
            ans.add(rem);
            
            for(int j : adj.get(rem)){
                indegree[j]--;
                if(indegree[j]==0){
                    q.add(j);
                }
            }
        }
        if(ans.size()==V) return false;
        return true;
    }
}
