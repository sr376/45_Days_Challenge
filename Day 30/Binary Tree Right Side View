class Solution {
    public List<Integer> rightSideView(TreeNode root) {
        List<Integer> result = new ArrayList<>();
        if(root==null){
            return result;
        }        
        Queue<TreeNode> queue = new LinkedList<>();
        queue.offer(root);
        
        while (!queue.isEmpty()) {
            int size = queue.size();
            TreeNode lastNode = null; 
            
            // Process nodes at the current level
            for (int i = 0; i < size; i++) {
                TreeNode node = queue.poll();
                lastNode = node; 
                if (node.left != null) queue.offer(node.left);
                if (node.right != null) queue.offer(node.right);
            }
            result.add(lastNode.val);
        }
        
        return result;
    }
}
