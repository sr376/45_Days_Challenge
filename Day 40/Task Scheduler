class Solution {

    public int leastInterval(char[] tasks, int n) {

        int[] taskCounts = new int[26];
        for (char task : tasks) {
            taskCounts[task - 'A']++;
        }

        Arrays.sort(taskCounts);
        int maxFreq = taskCounts[25];
        int maxFreqCount = 0;

        for (int i = 25; i >= 0; i--) {
            if (taskCounts[i] == maxFreq) {
                maxFreqCount++;
            } else {
                break;
            }
        }

        int partCount = maxFreq - 1;
        int partLength = n - (maxFreqCount - 1);
        int emptySlots = partCount * partLength;
        int availableTasks = tasks.length - (maxFreq * maxFreqCount);
        int idles = Math.max(0, emptySlots - availableTasks);

        return tasks.length + idles;
    }
}
